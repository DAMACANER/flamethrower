//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var ClassLevelTable = newClassLevelTableTable("", "class_level_table", "")

type classLevelTableTable struct {
	sqlite.Table

	// Columns
	ID                  sqlite.ColumnInteger
	Name                sqlite.ColumnString
	Level               sqlite.ColumnString
	BaseAttackBonus     sqlite.ColumnString
	FortSave            sqlite.ColumnString
	RefSave             sqlite.ColumnString
	WillSave            sqlite.ColumnString
	CasterLevel         sqlite.ColumnString
	PointsPerDay        sqlite.ColumnString
	AcBonus             sqlite.ColumnString
	FlurryOfBlows       sqlite.ColumnString
	BonusSpells         sqlite.ColumnString
	PowersKnown         sqlite.ColumnString
	UnarmoredSpeedBonus sqlite.ColumnString
	UnarmedDamage       sqlite.ColumnString
	PowerLevel          sqlite.ColumnString
	Special             sqlite.ColumnString
	Slots0              sqlite.ColumnString
	Slots1              sqlite.ColumnString
	Slots2              sqlite.ColumnString
	Slots3              sqlite.ColumnString
	Slots4              sqlite.ColumnString
	Slots5              sqlite.ColumnString
	Slots6              sqlite.ColumnString
	Slots7              sqlite.ColumnString
	Slots8              sqlite.ColumnString
	Slots9              sqlite.ColumnString
	SpellsKnown0        sqlite.ColumnString
	SpellsKnown1        sqlite.ColumnString
	SpellsKnown2        sqlite.ColumnString
	SpellsKnown3        sqlite.ColumnString
	SpellsKnown4        sqlite.ColumnString
	SpellsKnown5        sqlite.ColumnString
	SpellsKnown6        sqlite.ColumnString
	SpellsKnown7        sqlite.ColumnString
	SpellsKnown8        sqlite.ColumnString
	SpellsKnown9        sqlite.ColumnString
	Reference           sqlite.ColumnString

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type ClassLevelTableTable struct {
	classLevelTableTable

	EXCLUDED classLevelTableTable
}

// AS creates new ClassLevelTableTable with assigned alias
func (a ClassLevelTableTable) AS(alias string) *ClassLevelTableTable {
	return newClassLevelTableTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ClassLevelTableTable with assigned schema name
func (a ClassLevelTableTable) FromSchema(schemaName string) *ClassLevelTableTable {
	return newClassLevelTableTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ClassLevelTableTable with assigned table prefix
func (a ClassLevelTableTable) WithPrefix(prefix string) *ClassLevelTableTable {
	return newClassLevelTableTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ClassLevelTableTable with assigned table suffix
func (a ClassLevelTableTable) WithSuffix(suffix string) *ClassLevelTableTable {
	return newClassLevelTableTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newClassLevelTableTable(schemaName, tableName, alias string) *ClassLevelTableTable {
	return &ClassLevelTableTable{
		classLevelTableTable: newClassLevelTableTableImpl(schemaName, tableName, alias),
		EXCLUDED:             newClassLevelTableTableImpl("", "excluded", ""),
	}
}

func newClassLevelTableTableImpl(schemaName, tableName, alias string) classLevelTableTable {
	var (
		IDColumn                  = sqlite.IntegerColumn("id")
		NameColumn                = sqlite.StringColumn("name")
		LevelColumn               = sqlite.StringColumn("level")
		BaseAttackBonusColumn     = sqlite.StringColumn("base_attack_bonus")
		FortSaveColumn            = sqlite.StringColumn("fort_save")
		RefSaveColumn             = sqlite.StringColumn("ref_save")
		WillSaveColumn            = sqlite.StringColumn("will_save")
		CasterLevelColumn         = sqlite.StringColumn("caster_level")
		PointsPerDayColumn        = sqlite.StringColumn("points_per_day")
		AcBonusColumn             = sqlite.StringColumn("ac_bonus")
		FlurryOfBlowsColumn       = sqlite.StringColumn("flurry_of_blows")
		BonusSpellsColumn         = sqlite.StringColumn("bonus_spells")
		PowersKnownColumn         = sqlite.StringColumn("powers_known")
		UnarmoredSpeedBonusColumn = sqlite.StringColumn("unarmored_speed_bonus")
		UnarmedDamageColumn       = sqlite.StringColumn("unarmed_damage")
		PowerLevelColumn          = sqlite.StringColumn("power_level")
		SpecialColumn             = sqlite.StringColumn("special")
		Slots0Column              = sqlite.StringColumn("slots_0")
		Slots1Column              = sqlite.StringColumn("slots_1")
		Slots2Column              = sqlite.StringColumn("slots_2")
		Slots3Column              = sqlite.StringColumn("slots_3")
		Slots4Column              = sqlite.StringColumn("slots_4")
		Slots5Column              = sqlite.StringColumn("slots_5")
		Slots6Column              = sqlite.StringColumn("slots_6")
		Slots7Column              = sqlite.StringColumn("slots_7")
		Slots8Column              = sqlite.StringColumn("slots_8")
		Slots9Column              = sqlite.StringColumn("slots_9")
		SpellsKnown0Column        = sqlite.StringColumn("spells_known_0")
		SpellsKnown1Column        = sqlite.StringColumn("spells_known_1")
		SpellsKnown2Column        = sqlite.StringColumn("spells_known_2")
		SpellsKnown3Column        = sqlite.StringColumn("spells_known_3")
		SpellsKnown4Column        = sqlite.StringColumn("spells_known_4")
		SpellsKnown5Column        = sqlite.StringColumn("spells_known_5")
		SpellsKnown6Column        = sqlite.StringColumn("spells_known_6")
		SpellsKnown7Column        = sqlite.StringColumn("spells_known_7")
		SpellsKnown8Column        = sqlite.StringColumn("spells_known_8")
		SpellsKnown9Column        = sqlite.StringColumn("spells_known_9")
		ReferenceColumn           = sqlite.StringColumn("reference")
		allColumns                = sqlite.ColumnList{IDColumn, NameColumn, LevelColumn, BaseAttackBonusColumn, FortSaveColumn, RefSaveColumn, WillSaveColumn, CasterLevelColumn, PointsPerDayColumn, AcBonusColumn, FlurryOfBlowsColumn, BonusSpellsColumn, PowersKnownColumn, UnarmoredSpeedBonusColumn, UnarmedDamageColumn, PowerLevelColumn, SpecialColumn, Slots0Column, Slots1Column, Slots2Column, Slots3Column, Slots4Column, Slots5Column, Slots6Column, Slots7Column, Slots8Column, Slots9Column, SpellsKnown0Column, SpellsKnown1Column, SpellsKnown2Column, SpellsKnown3Column, SpellsKnown4Column, SpellsKnown5Column, SpellsKnown6Column, SpellsKnown7Column, SpellsKnown8Column, SpellsKnown9Column, ReferenceColumn}
		mutableColumns            = sqlite.ColumnList{NameColumn, LevelColumn, BaseAttackBonusColumn, FortSaveColumn, RefSaveColumn, WillSaveColumn, CasterLevelColumn, PointsPerDayColumn, AcBonusColumn, FlurryOfBlowsColumn, BonusSpellsColumn, PowersKnownColumn, UnarmoredSpeedBonusColumn, UnarmedDamageColumn, PowerLevelColumn, SpecialColumn, Slots0Column, Slots1Column, Slots2Column, Slots3Column, Slots4Column, Slots5Column, Slots6Column, Slots7Column, Slots8Column, Slots9Column, SpellsKnown0Column, SpellsKnown1Column, SpellsKnown2Column, SpellsKnown3Column, SpellsKnown4Column, SpellsKnown5Column, SpellsKnown6Column, SpellsKnown7Column, SpellsKnown8Column, SpellsKnown9Column, ReferenceColumn}
	)

	return classLevelTableTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                  IDColumn,
		Name:                NameColumn,
		Level:               LevelColumn,
		BaseAttackBonus:     BaseAttackBonusColumn,
		FortSave:            FortSaveColumn,
		RefSave:             RefSaveColumn,
		WillSave:            WillSaveColumn,
		CasterLevel:         CasterLevelColumn,
		PointsPerDay:        PointsPerDayColumn,
		AcBonus:             AcBonusColumn,
		FlurryOfBlows:       FlurryOfBlowsColumn,
		BonusSpells:         BonusSpellsColumn,
		PowersKnown:         PowersKnownColumn,
		UnarmoredSpeedBonus: UnarmoredSpeedBonusColumn,
		UnarmedDamage:       UnarmedDamageColumn,
		PowerLevel:          PowerLevelColumn,
		Special:             SpecialColumn,
		Slots0:              Slots0Column,
		Slots1:              Slots1Column,
		Slots2:              Slots2Column,
		Slots3:              Slots3Column,
		Slots4:              Slots4Column,
		Slots5:              Slots5Column,
		Slots6:              Slots6Column,
		Slots7:              Slots7Column,
		Slots8:              Slots8Column,
		Slots9:              Slots9Column,
		SpellsKnown0:        SpellsKnown0Column,
		SpellsKnown1:        SpellsKnown1Column,
		SpellsKnown2:        SpellsKnown2Column,
		SpellsKnown3:        SpellsKnown3Column,
		SpellsKnown4:        SpellsKnown4Column,
		SpellsKnown5:        SpellsKnown5Column,
		SpellsKnown6:        SpellsKnown6Column,
		SpellsKnown7:        SpellsKnown7Column,
		SpellsKnown8:        SpellsKnown8Column,
		SpellsKnown9:        SpellsKnown9Column,
		Reference:           ReferenceColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
