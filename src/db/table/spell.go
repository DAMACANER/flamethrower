//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Spell = newSpellTable("", "spell", "")

type spellTable struct {
	sqlite.Table

	// Columns
	ID                       sqlite.ColumnInteger
	Name                     sqlite.ColumnString
	Altname                  sqlite.ColumnString
	School                   sqlite.ColumnString
	Subschool                sqlite.ColumnString
	Descriptor               sqlite.ColumnString
	SpellcraftDc             sqlite.ColumnString
	Level                    sqlite.ColumnString
	Components               sqlite.ColumnString
	CastingTime              sqlite.ColumnString
	Range                    sqlite.ColumnString
	Target                   sqlite.ColumnString
	Area                     sqlite.ColumnString
	Effect                   sqlite.ColumnString
	Duration                 sqlite.ColumnString
	SavingThrow              sqlite.ColumnString
	SpellResistance          sqlite.ColumnString
	ShortDescription         sqlite.ColumnString
	ToDevelop                sqlite.ColumnString
	MaterialComponents       sqlite.ColumnString
	ArcaneMaterialComponents sqlite.ColumnString
	Focus                    sqlite.ColumnString
	Description              sqlite.ColumnString
	XpCost                   sqlite.ColumnString
	ArcaneFocus              sqlite.ColumnString
	WizardFocus              sqlite.ColumnString
	VerbalComponents         sqlite.ColumnString
	SorcererFocus            sqlite.ColumnString
	BardFocus                sqlite.ColumnString
	ClericFocus              sqlite.ColumnString
	DruidFocus               sqlite.ColumnString
	FullText                 sqlite.ColumnString
	Reference                sqlite.ColumnString

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type SpellTable struct {
	spellTable

	EXCLUDED spellTable
}

// AS creates new SpellTable with assigned alias
func (a SpellTable) AS(alias string) *SpellTable {
	return newSpellTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SpellTable with assigned schema name
func (a SpellTable) FromSchema(schemaName string) *SpellTable {
	return newSpellTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SpellTable with assigned table prefix
func (a SpellTable) WithPrefix(prefix string) *SpellTable {
	return newSpellTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SpellTable with assigned table suffix
func (a SpellTable) WithSuffix(suffix string) *SpellTable {
	return newSpellTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSpellTable(schemaName, tableName, alias string) *SpellTable {
	return &SpellTable{
		spellTable: newSpellTableImpl(schemaName, tableName, alias),
		EXCLUDED:   newSpellTableImpl("", "excluded", ""),
	}
}

func newSpellTableImpl(schemaName, tableName, alias string) spellTable {
	var (
		IDColumn                       = sqlite.IntegerColumn("id")
		NameColumn                     = sqlite.StringColumn("name")
		AltnameColumn                  = sqlite.StringColumn("altname")
		SchoolColumn                   = sqlite.StringColumn("school")
		SubschoolColumn                = sqlite.StringColumn("subschool")
		DescriptorColumn               = sqlite.StringColumn("descriptor")
		SpellcraftDcColumn             = sqlite.StringColumn("spellcraft_dc")
		LevelColumn                    = sqlite.StringColumn("level")
		ComponentsColumn               = sqlite.StringColumn("components")
		CastingTimeColumn              = sqlite.StringColumn("casting_time")
		RangeColumn                    = sqlite.StringColumn("range")
		TargetColumn                   = sqlite.StringColumn("target")
		AreaColumn                     = sqlite.StringColumn("area")
		EffectColumn                   = sqlite.StringColumn("effect")
		DurationColumn                 = sqlite.StringColumn("duration")
		SavingThrowColumn              = sqlite.StringColumn("saving_throw")
		SpellResistanceColumn          = sqlite.StringColumn("spell_resistance")
		ShortDescriptionColumn         = sqlite.StringColumn("short_description")
		ToDevelopColumn                = sqlite.StringColumn("to_develop")
		MaterialComponentsColumn       = sqlite.StringColumn("material_components")
		ArcaneMaterialComponentsColumn = sqlite.StringColumn("arcane_material_components")
		FocusColumn                    = sqlite.StringColumn("focus")
		DescriptionColumn              = sqlite.StringColumn("description")
		XpCostColumn                   = sqlite.StringColumn("xp_cost")
		ArcaneFocusColumn              = sqlite.StringColumn("arcane_focus")
		WizardFocusColumn              = sqlite.StringColumn("wizard_focus")
		VerbalComponentsColumn         = sqlite.StringColumn("verbal_components")
		SorcererFocusColumn            = sqlite.StringColumn("sorcerer_focus")
		BardFocusColumn                = sqlite.StringColumn("bard_focus")
		ClericFocusColumn              = sqlite.StringColumn("cleric_focus")
		DruidFocusColumn               = sqlite.StringColumn("druid_focus")
		FullTextColumn                 = sqlite.StringColumn("full_text")
		ReferenceColumn                = sqlite.StringColumn("reference")
		allColumns                     = sqlite.ColumnList{IDColumn, NameColumn, AltnameColumn, SchoolColumn, SubschoolColumn, DescriptorColumn, SpellcraftDcColumn, LevelColumn, ComponentsColumn, CastingTimeColumn, RangeColumn, TargetColumn, AreaColumn, EffectColumn, DurationColumn, SavingThrowColumn, SpellResistanceColumn, ShortDescriptionColumn, ToDevelopColumn, MaterialComponentsColumn, ArcaneMaterialComponentsColumn, FocusColumn, DescriptionColumn, XpCostColumn, ArcaneFocusColumn, WizardFocusColumn, VerbalComponentsColumn, SorcererFocusColumn, BardFocusColumn, ClericFocusColumn, DruidFocusColumn, FullTextColumn, ReferenceColumn}
		mutableColumns                 = sqlite.ColumnList{NameColumn, AltnameColumn, SchoolColumn, SubschoolColumn, DescriptorColumn, SpellcraftDcColumn, LevelColumn, ComponentsColumn, CastingTimeColumn, RangeColumn, TargetColumn, AreaColumn, EffectColumn, DurationColumn, SavingThrowColumn, SpellResistanceColumn, ShortDescriptionColumn, ToDevelopColumn, MaterialComponentsColumn, ArcaneMaterialComponentsColumn, FocusColumn, DescriptionColumn, XpCostColumn, ArcaneFocusColumn, WizardFocusColumn, VerbalComponentsColumn, SorcererFocusColumn, BardFocusColumn, ClericFocusColumn, DruidFocusColumn, FullTextColumn, ReferenceColumn}
	)

	return spellTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                       IDColumn,
		Name:                     NameColumn,
		Altname:                  AltnameColumn,
		School:                   SchoolColumn,
		Subschool:                SubschoolColumn,
		Descriptor:               DescriptorColumn,
		SpellcraftDc:             SpellcraftDcColumn,
		Level:                    LevelColumn,
		Components:               ComponentsColumn,
		CastingTime:              CastingTimeColumn,
		Range:                    RangeColumn,
		Target:                   TargetColumn,
		Area:                     AreaColumn,
		Effect:                   EffectColumn,
		Duration:                 DurationColumn,
		SavingThrow:              SavingThrowColumn,
		SpellResistance:          SpellResistanceColumn,
		ShortDescription:         ShortDescriptionColumn,
		ToDevelop:                ToDevelopColumn,
		MaterialComponents:       MaterialComponentsColumn,
		ArcaneMaterialComponents: ArcaneMaterialComponentsColumn,
		Focus:                    FocusColumn,
		Description:              DescriptionColumn,
		XpCost:                   XpCostColumn,
		ArcaneFocus:              ArcaneFocusColumn,
		WizardFocus:              WizardFocusColumn,
		VerbalComponents:         VerbalComponentsColumn,
		SorcererFocus:            SorcererFocusColumn,
		BardFocus:                BardFocusColumn,
		ClericFocus:              ClericFocusColumn,
		DruidFocus:               DruidFocusColumn,
		FullText:                 FullTextColumn,
		Reference:                ReferenceColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
