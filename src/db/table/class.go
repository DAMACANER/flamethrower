//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Class = newClassTable("", "class", "")

type classTable struct {
	sqlite.Table

	// Columns
	ID                   sqlite.ColumnInteger
	Name                 sqlite.ColumnString
	Type                 sqlite.ColumnString
	Alignment            sqlite.ColumnString
	HitDie               sqlite.ColumnString
	ClassSkills          sqlite.ColumnString
	SkillPoints          sqlite.ColumnString
	SkillPointsAbility   sqlite.ColumnString
	SpellStat            sqlite.ColumnString
	Proficiencies        sqlite.ColumnString
	SpellType            sqlite.ColumnString
	EpicFeatBaseLevel    sqlite.ColumnString
	EpicFeatInterval     sqlite.ColumnString
	EpicFeatList         sqlite.ColumnString
	EpicFullText         sqlite.ColumnString
	ReqRace              sqlite.ColumnString
	ReqWeaponProficiency sqlite.ColumnString
	ReqBaseAttackBonus   sqlite.ColumnString
	ReqSkill             sqlite.ColumnString
	ReqFeat              sqlite.ColumnString
	ReqSpells            sqlite.ColumnString
	ReqLanguages         sqlite.ColumnString
	ReqPsionics          sqlite.ColumnString
	ReqEpicFeat          sqlite.ColumnString
	ReqSpecial           sqlite.ColumnString
	SpellList1           sqlite.ColumnString
	SpellList2           sqlite.ColumnString
	SpellList3           sqlite.ColumnString
	SpellList4           sqlite.ColumnString
	SpellList5           sqlite.ColumnString
	FullText             sqlite.ColumnString
	Reference            sqlite.ColumnString

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type ClassTable struct {
	classTable

	EXCLUDED classTable
}

// AS creates new ClassTable with assigned alias
func (a ClassTable) AS(alias string) *ClassTable {
	return newClassTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ClassTable with assigned schema name
func (a ClassTable) FromSchema(schemaName string) *ClassTable {
	return newClassTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ClassTable with assigned table prefix
func (a ClassTable) WithPrefix(prefix string) *ClassTable {
	return newClassTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ClassTable with assigned table suffix
func (a ClassTable) WithSuffix(suffix string) *ClassTable {
	return newClassTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newClassTable(schemaName, tableName, alias string) *ClassTable {
	return &ClassTable{
		classTable: newClassTableImpl(schemaName, tableName, alias),
		EXCLUDED:   newClassTableImpl("", "excluded", ""),
	}
}

func newClassTableImpl(schemaName, tableName, alias string) classTable {
	var (
		IDColumn                   = sqlite.IntegerColumn("id")
		NameColumn                 = sqlite.StringColumn("name")
		TypeColumn                 = sqlite.StringColumn("type")
		AlignmentColumn            = sqlite.StringColumn("alignment")
		HitDieColumn               = sqlite.StringColumn("hit_die")
		ClassSkillsColumn          = sqlite.StringColumn("class_skills")
		SkillPointsColumn          = sqlite.StringColumn("skill_points")
		SkillPointsAbilityColumn   = sqlite.StringColumn("skill_points_ability")
		SpellStatColumn            = sqlite.StringColumn("spell_stat")
		ProficienciesColumn        = sqlite.StringColumn("proficiencies")
		SpellTypeColumn            = sqlite.StringColumn("spell_type")
		EpicFeatBaseLevelColumn    = sqlite.StringColumn("epic_feat_base_level")
		EpicFeatIntervalColumn     = sqlite.StringColumn("epic_feat_interval")
		EpicFeatListColumn         = sqlite.StringColumn("epic_feat_list")
		EpicFullTextColumn         = sqlite.StringColumn("epic_full_text")
		ReqRaceColumn              = sqlite.StringColumn("req_race")
		ReqWeaponProficiencyColumn = sqlite.StringColumn("req_weapon_proficiency")
		ReqBaseAttackBonusColumn   = sqlite.StringColumn("req_base_attack_bonus")
		ReqSkillColumn             = sqlite.StringColumn("req_skill")
		ReqFeatColumn              = sqlite.StringColumn("req_feat")
		ReqSpellsColumn            = sqlite.StringColumn("req_spells")
		ReqLanguagesColumn         = sqlite.StringColumn("req_languages")
		ReqPsionicsColumn          = sqlite.StringColumn("req_psionics")
		ReqEpicFeatColumn          = sqlite.StringColumn("req_epic_feat")
		ReqSpecialColumn           = sqlite.StringColumn("req_special")
		SpellList1Column           = sqlite.StringColumn("spell_list_1")
		SpellList2Column           = sqlite.StringColumn("spell_list_2")
		SpellList3Column           = sqlite.StringColumn("spell_list_3")
		SpellList4Column           = sqlite.StringColumn("spell_list_4")
		SpellList5Column           = sqlite.StringColumn("spell_list_5")
		FullTextColumn             = sqlite.StringColumn("full_text")
		ReferenceColumn            = sqlite.StringColumn("reference")
		allColumns                 = sqlite.ColumnList{IDColumn, NameColumn, TypeColumn, AlignmentColumn, HitDieColumn, ClassSkillsColumn, SkillPointsColumn, SkillPointsAbilityColumn, SpellStatColumn, ProficienciesColumn, SpellTypeColumn, EpicFeatBaseLevelColumn, EpicFeatIntervalColumn, EpicFeatListColumn, EpicFullTextColumn, ReqRaceColumn, ReqWeaponProficiencyColumn, ReqBaseAttackBonusColumn, ReqSkillColumn, ReqFeatColumn, ReqSpellsColumn, ReqLanguagesColumn, ReqPsionicsColumn, ReqEpicFeatColumn, ReqSpecialColumn, SpellList1Column, SpellList2Column, SpellList3Column, SpellList4Column, SpellList5Column, FullTextColumn, ReferenceColumn}
		mutableColumns             = sqlite.ColumnList{NameColumn, TypeColumn, AlignmentColumn, HitDieColumn, ClassSkillsColumn, SkillPointsColumn, SkillPointsAbilityColumn, SpellStatColumn, ProficienciesColumn, SpellTypeColumn, EpicFeatBaseLevelColumn, EpicFeatIntervalColumn, EpicFeatListColumn, EpicFullTextColumn, ReqRaceColumn, ReqWeaponProficiencyColumn, ReqBaseAttackBonusColumn, ReqSkillColumn, ReqFeatColumn, ReqSpellsColumn, ReqLanguagesColumn, ReqPsionicsColumn, ReqEpicFeatColumn, ReqSpecialColumn, SpellList1Column, SpellList2Column, SpellList3Column, SpellList4Column, SpellList5Column, FullTextColumn, ReferenceColumn}
	)

	return classTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                   IDColumn,
		Name:                 NameColumn,
		Type:                 TypeColumn,
		Alignment:            AlignmentColumn,
		HitDie:               HitDieColumn,
		ClassSkills:          ClassSkillsColumn,
		SkillPoints:          SkillPointsColumn,
		SkillPointsAbility:   SkillPointsAbilityColumn,
		SpellStat:            SpellStatColumn,
		Proficiencies:        ProficienciesColumn,
		SpellType:            SpellTypeColumn,
		EpicFeatBaseLevel:    EpicFeatBaseLevelColumn,
		EpicFeatInterval:     EpicFeatIntervalColumn,
		EpicFeatList:         EpicFeatListColumn,
		EpicFullText:         EpicFullTextColumn,
		ReqRace:              ReqRaceColumn,
		ReqWeaponProficiency: ReqWeaponProficiencyColumn,
		ReqBaseAttackBonus:   ReqBaseAttackBonusColumn,
		ReqSkill:             ReqSkillColumn,
		ReqFeat:              ReqFeatColumn,
		ReqSpells:            ReqSpellsColumn,
		ReqLanguages:         ReqLanguagesColumn,
		ReqPsionics:          ReqPsionicsColumn,
		ReqEpicFeat:          ReqEpicFeatColumn,
		ReqSpecial:           ReqSpecialColumn,
		SpellList1:           SpellList1Column,
		SpellList2:           SpellList2Column,
		SpellList3:           SpellList3Column,
		SpellList4:           SpellList4Column,
		SpellList5:           SpellList5Column,
		FullText:             FullTextColumn,
		Reference:            ReferenceColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
