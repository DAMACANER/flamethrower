[tool.poetry]
name = "flamethrower"
version = "0.1.0"
description = "DnD 3.5e database."
authors = ["caner <caner@damacana.dev>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = {extras = ["essentials"], version = "^0.100.0"}
sqlalchemy = {extras = ["asyncio"], version = "^2.0.19"}
pydantic = "^2.0.3"
uvicorn = "^0.23.1"
aiosqlite = "^0.19.0"
pdoc = "^14.0.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
include = ["app"]
stubPath = "./typings"
typeCheckingMode = "strict"
reportUntypedFunctionDecorator = "error"
reportUntypedClassDecorator = "error"
reportUntypedNamedTuple = "error"
reportTypeCommentUsage = "error"
reportConstantRedefinition = "error"
reportDeprecated = "warning"
reportIncompatibleMethodOverride = "error"
reportOverlappingOverload = "error"
reportMissingParameterType = "error"
reportUnnecessaryIsInstance = "error"
reportUnnecessaryCast = "error"
reportUnnecessaryComparison = "error"
reportUnnecessaryContains = "error"
reportUnnecessaryTypeIgnoreComment = "error"
reportShadowedImports = "error"
reportUnknownParameterType = "error"
reportUnknownArgumentType = "error"
reportUnknownMemberType = "error"
reportUnknownVariableType = "error"
reportMissingTypeArgument = "error"
reportIncompleteStub = "error"
reportMissingTypeStubs = "error"
reportImplicitStringConcatenation = "error"
reportImplicitTypeConversion = "error"
reportPrivateUsage = "error"
reportProtectedAccess = "error"
reportGeneralTypeIssues = "error"

[tool.ruff.pycodestyle]
ignore-overlong-task-comments = true